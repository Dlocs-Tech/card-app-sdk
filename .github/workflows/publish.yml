name: Publish

on:
  push:
    branches:
      - master
    paths:
      - 'package.json'
      - 'src/**'
      - 'lib/**'
      - 'dist/**'

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    permissions:
      contents: write
      packages: write
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Bump version
        id: version-bump
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          yarn version --minor --no-git-tag-version

          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "Nueva versiÃ³n: $NEW_VERSION"

          git add package.json
          git commit -m "chore: bump version to $NEW_VERSION [skip ci]"
          git push origin master

      - name: Build package
        run: yarn build

      - name: Publish to npm
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
          yarn publish --non-interactive

      - name: Create Git tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag "v${{ steps.version-bump.outputs.new_version }}"
          git push origin "v${{ steps.version-bump.outputs.new_version }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: 'v${{ steps.version-bump.outputs.new_version }}'
          release_name: 'Release v${{ steps.version-bump.outputs.new_version }}'
          draft: false
          prerelease: false
